
@page "/lamps/details/{lampId}"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using MySmartHome.DAL.Models
@using MySmartHome.DAL.Repositories.Interfaces
@using Client.Blazor.Auth.Data
@using System.Security.Claims
@using MySmartHome.DAL.Repositories

@inject HttpClient Http
@inject IEntityRepository<Lamps> repo
@inject AuthenticationStateProvider provider

<h3>Lamp Details</h3>

@if (lamp == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                <label>Name</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.Name</label>
            </dd>
            <dt class="col-sm-2">
                <label>Time Update</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.DateTimeUpdate.ToLocalTime()</label>
            </dd>
            <dt class="col-sm-2">
                <label>Topic Up</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.TopicUp</label>
            </dd>
            <dt class="col-sm-2">
                <label>Topic Down</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.TopicDown</label>
            </dd>
            <dt class="col-sm-2">
                <label>Status</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lampStatus</label>
            </dd>
            <dt class="col-sm-2">
                <label>Room Name</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.RoomName</label>
            </dd>
        </dl>
    </div>
    <br/>
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Status</th>
                    <th>Time Update</th>
                    <th>Topic</th>
                    <th> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var lamp in lampHistory)
                {
                    var value = lamp.Value == "1" ? "On" : "Off";
                    <tr>
                        <td>@lamp.Name</td>
                        <td>@value</td>
                        <td>@lamp.DateTimeUpdate.ToLocalTime()</td>
                        <td>@lamp.Topic</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (isAuthorized)
    {
        <div>
            <a href="lamps/edit/@lamp.Id">Edit</a>
        </div>
    }
}

<div>
    <a href="lamps">Back to List</a>
</div>


@code {
    IEnumerable<HistoryData>? lampHistory;
    Lamps? lamp;
    bool isAuthorized;

    [Parameter]
    public string? lampId { get; set; }
    private Guid _id;
    private string? _token;
    string lampStatus;

    protected override async Task OnInitializedAsync()
    {
        var webRepo = (WebRepository<Lamps>)repo;
        isAuthorized = await webRepo.SetDefaultRequestHeaders(provider);
        _id = Guid.Parse(lampId!);
        lamp = await webRepo.GetById(_id);
        lampStatus = lamp.Status ? "On" : "Off";
        lampHistory = await GetData(lamp.Name, 8);
        lampHistory = lampHistory.OrderByDescending(s => s.DateTimeUpdate);
    }

    private async Task<IEnumerable<HistoryData>?> GetData(string lampName, int take)
    {
        return await Http.GetFromJsonAsync<IEnumerable<HistoryData>>($"History/last/{lampName}/{take}");
    }
}
