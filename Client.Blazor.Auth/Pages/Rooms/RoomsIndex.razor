@page "/rooms"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using MySmartHomeWebApi.Models
@using MySmartHomeWebApi.Data.Interfaces
@using Client.Blazor.Auth.Data
@using System.Security.Claims
@using WebApiClients.Repositories

@inject ITokenStorage tokenStorage
@inject AuthenticationStateProvider provider
@inject IEntityRepository<Rooms> repo

<h3>RoomsIndex</h3>

@if (rooms == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="col-md-6">
        <a href='/rooms/add' class="btn btn-primary" role="button">
            <i class="fas fa-user-plus"></i>
            Add new room
        </a>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th> </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var room in rooms)
            {
                <tr>
                    <td>@room.Name</td>
                    <td>
                        <a href="rooms/edit/@room.Id">Edit</a> |
                        <a href="rooms/details/@room.Id">Details</a> |
                        <a href="rooms/delete/@room.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    IEnumerable<Rooms>? rooms;
    WebRepository<Rooms> webRepo;

    protected override async Task OnInitializedAsync()
    {
        webRepo = (WebRepository<Rooms>)repo;
        var authState = await provider.GetAuthenticationStateAsync();
        var user = authState.User;
        var t = tokenStorage.GetToken(user.FindFirst(c => c.Type == ClaimTypes.Email)?.Value!);
        webRepo.SetDefaultRequestHeaders(t);
        rooms = await webRepo.GetAll();
        rooms = rooms.OrderBy(s => s.Name);
    }
}
