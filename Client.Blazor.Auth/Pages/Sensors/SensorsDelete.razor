@page "/sensors/delete/{lampId}"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using MySmartHome.DAL.Models
@using MySmartHome.DAL.Repositories.Interfaces
@using Client.Blazor.Auth.Data
@using System.Security.Claims
@using MySmartHome.DAL.Repositories

@inject IEntityRepository<Lamps> repo
@inject NavigationManager NavManager
@inject AuthenticationStateProvider provider

<h3>Lamp Delete</h3>

@if (lamp == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                <label>Name</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.Name</label>
            </dd>
            <dt class="col-sm-2">
                <label>Time Update</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.DateTimeUpdate</label>
            </dd>
            <dt class="col-sm-2">
                <label>Topic Up</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.TopicUp</label>
            </dd>
            <dt class="col-sm-2">
                <label>Topic Down</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.TopicDown</label>
            </dd>
            <dt class="col-sm-2">
                <label>Status</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.Status</label>
            </dd>
            <dt class="col-sm-2">
                <label>Room Name</label>
            </dt>
            <dd class="col-sm-10">
                <label>@lamp.RoomName</label>
            </dd>
        </dl>
        <button class="btn btn-primary" @onclick="EditLamp">Delete</button><br/>
    </div>
}
<div>
    <a href="sensors">Back to List</a>
</div>

@code {

    Lamps? lamp;

    [Parameter]
    public string? lampId { get; set; }
    private Guid _id;

    WebRepository<Lamps>? webRepo;

    protected override async Task OnInitializedAsync()
    {
        webRepo = (WebRepository<Lamps>)repo;
        await webRepo.SetDefaultRequestHeaders(provider);
        _id = Guid.Parse(lampId!);
        lamp = await webRepo.GetById(_id);
    }

    protected async Task EditLamp()
    {
        lamp = await webRepo.DeleteById(_id);
        NavManager.NavigateTo("/sensors");
    }
}
