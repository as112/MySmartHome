// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using MySmartHome.DAL.Data;

#nullable disable

namespace MySmartHomeWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221027085512_InitData")]
    partial class InitData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MySmartHomeWebApi.Models.HistoryData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoryData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bffd3f72-471b-4a3d-b5a2-9732a50e7a5e"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4470),
                            Name = "test",
                            Topic = "/test",
                            Value = "112"
                        });
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Lamps", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TopicDown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicUp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomsId");

                    b.ToTable("Lamps");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e09c26c1-229e-4755-b4fd-863c61c24d4d"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4610),
                            Name = "Свет в туалете",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP01/R1/STATUS/",
                            TopicUp = "/user/as112/ESP01/R1/"
                        },
                        new
                        {
                            Id = new Guid("ffbfd045-9327-4fee-8496-a0bd78cd30b0"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4646),
                            Name = "Свет в котельной",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP01/R2/STATUS/",
                            TopicUp = "/user/as112/ESP01/R2/"
                        },
                        new
                        {
                            Id = new Guid("0a614a62-534c-4394-b75d-ebe47a23a243"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4650),
                            Name = "Свет в прихожей",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP01/R3/STATUS/",
                            TopicUp = "/user/as112/ESP01/R3/"
                        },
                        new
                        {
                            Id = new Guid("5b4fe4f4-e389-46d0-9c5b-405c0dfafe5c"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4653),
                            Name = "Свет на крыльце",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP01/R4/STATUS/",
                            TopicUp = "/user/as112/ESP01/R4/"
                        },
                        new
                        {
                            Id = new Guid("875c24fd-d193-4c90-9ba6-8fe60eb681d6"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4655),
                            Name = "Свет 1 на кухне",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP02/R1/STATUS/",
                            TopicUp = "/user/as112/ESP02/R1/"
                        },
                        new
                        {
                            Id = new Guid("21ec210d-fc82-4ae2-8665-1cf6c77c153e"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4659),
                            Name = "Свет 2 на кухне",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP02/R2/STATUS/",
                            TopicUp = "/user/as112/ESP02/R2/"
                        },
                        new
                        {
                            Id = new Guid("e200377b-bf0f-47e6-bf49-de19bd68ac01"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4671),
                            Name = "Свет в ванной",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP02/R3/STATUS/",
                            TopicUp = "/user/as112/ESP02/R3/"
                        },
                        new
                        {
                            Id = new Guid("d577fca9-16ff-4719-9721-7967ce56acd6"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4674),
                            Name = "Свет в коридоре",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP02/R4/STATUS/",
                            TopicUp = "/user/as112/ESP02/R4/"
                        },
                        new
                        {
                            Id = new Guid("aed904d1-ebd2-43b7-a941-1504f8ddddb3"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4677),
                            Name = "Свет 1 в спальне",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP03/R1/STATUS/",
                            TopicUp = "/user/as112/ESP03/R1/"
                        },
                        new
                        {
                            Id = new Guid("f1a88b94-9c85-41b6-9de5-68b189ce8f7d"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4680),
                            Name = "Свет 2 в спальне",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP03/R2/STATUS/",
                            TopicUp = "/user/as112/ESP03/R2/"
                        },
                        new
                        {
                            Id = new Guid("89b7959d-524b-42fc-9876-7b5fba553602"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4683),
                            Name = "Свет 1 в гостиной",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP03/R3/STATUS/",
                            TopicUp = "/user/as112/ESP03/R3/"
                        },
                        new
                        {
                            Id = new Guid("2cd505f1-a601-4b60-bd2a-f640c2081f1f"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4685),
                            Name = "Свет 2 в гостиной",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP03/R4/STATUS/",
                            TopicUp = "/user/as112/ESP03/R4/"
                        },
                        new
                        {
                            Id = new Guid("8c85344a-c159-4ccc-9b5c-c45abdd5ec7c"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4688),
                            Name = "Свет 1 в детской",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP04/R1/STATUS/",
                            TopicUp = "/user/as112/ESP04/R1/"
                        },
                        new
                        {
                            Id = new Guid("7f1b0ad1-cb14-4cc9-b256-8f404c6a3251"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4691),
                            Name = "Свет 2 в детской",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP04/R2/STATUS/",
                            TopicUp = "/user/as112/ESP04/R2/"
                        },
                        new
                        {
                            Id = new Guid("faea55b0-5111-45a5-b605-cb8cd91ae901"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4726),
                            Name = "Свет 1 в кабинете",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP04/R3/STATUS/",
                            TopicUp = "/user/as112/ESP04/R3/"
                        },
                        new
                        {
                            Id = new Guid("4706e4bb-d503-49ae-a943-dffed0546322"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4730),
                            Name = "Свет 2 в кабинете",
                            RoomName = "",
                            Status = false,
                            TopicDown = "/user/as112/ESP04/R4/STATUS/",
                            TopicUp = "/user/as112/ESP04/R4/"
                        });
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Persons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad241f05-e46a-44c9-b485-38c9ff26f93f"),
                            Email = "admin",
                            Password = "admin",
                            Role = 0
                        });
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Rooms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a4ed13d-febb-4ce9-8c2c-b603270f8f11"),
                            Name = "Коридор"
                        },
                        new
                        {
                            Id = new Guid("8832408c-bcaa-4f6a-aff8-8cf58560789e"),
                            Name = "Прихожая"
                        },
                        new
                        {
                            Id = new Guid("9d3961e7-7b4f-4cce-a1b0-febb92a40e38"),
                            Name = "Котельная"
                        },
                        new
                        {
                            Id = new Guid("3704f75d-f19d-4665-b31f-7d87673c78be"),
                            Name = "Туалет"
                        },
                        new
                        {
                            Id = new Guid("90485713-fcb3-461c-9ae3-cb3bc8ca295e"),
                            Name = "Ванная"
                        },
                        new
                        {
                            Id = new Guid("75980ba9-5a55-444d-b9e4-7f1bfe6d92a0"),
                            Name = "Кухня"
                        },
                        new
                        {
                            Id = new Guid("1e48de83-3dff-4bc5-9b3c-51c626c6d169"),
                            Name = "Гостиная"
                        },
                        new
                        {
                            Id = new Guid("a4fb6c83-8f5c-4b18-a8be-f01615319b33"),
                            Name = "Спальня"
                        },
                        new
                        {
                            Id = new Guid("1195d579-778c-4f2a-baff-2926bd63ef0e"),
                            Name = "Детская"
                        },
                        new
                        {
                            Id = new Guid("32a2e07d-e94d-4e3b-ada1-dd024b7ed1ee"),
                            Name = "Кабинет"
                        });
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Sensors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TopicDown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicUp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DateTimeUpdate");

                    b.HasIndex("Name");

                    b.HasIndex("RoomsId");

                    b.ToTable("Sensors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d648305-e34f-47ab-b414-2d131067ce78"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4898),
                            Name = "Подача",
                            RoomName = "Котельная",
                            TopicUp = "/user/as112/KOTEL/Pod/",
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("01a310d3-771e-4f14-8278-48aaa661ff40"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4901),
                            Name = "Обратка",
                            RoomName = "Котельная",
                            TopicUp = "/user/as112/KOTEL/Obr/",
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("5d06495a-4fc1-4080-9d75-50b82b650f8a"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4903),
                            Name = "Термопара",
                            RoomName = "Котельная",
                            TopicUp = "/user/as112/KOTEL/Bunker/",
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("b1b55848-3bbe-4c5f-8efd-1925e37a0cdc"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4904),
                            Name = "Мощность",
                            RoomName = "Котельная",
                            TopicUp = "/user/as112/KOTEL/Power/",
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("5f86d838-5801-4481-8b7c-5abd17e0a71a"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4905),
                            Name = "Расход",
                            RoomName = "Котельная",
                            TopicUp = "/user/as112/KOTEL/Rashod/",
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("11201e98-9398-46a2-a634-c9326dd2afb4"),
                            DateTimeUpdate = new DateTime(2022, 10, 27, 11, 55, 12, 670, DateTimeKind.Local).AddTicks(4909),
                            Name = "Температура в коридоре",
                            RoomName = "Котельная",
                            TopicUp = "/user/as112/ESP05/TEMP/",
                            Value = 0.0
                        });
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Lamps", b =>
                {
                    b.HasOne("MySmartHomeWebApi.Models.Rooms", null)
                        .WithMany("Lamps")
                        .HasForeignKey("RoomsId");
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Sensors", b =>
                {
                    b.HasOne("MySmartHomeWebApi.Models.Rooms", null)
                        .WithMany("Sensors")
                        .HasForeignKey("RoomsId");
                });

            modelBuilder.Entity("MySmartHomeWebApi.Models.Rooms", b =>
                {
                    b.Navigation("Lamps");

                    b.Navigation("Sensors");
                });
#pragma warning restore 612, 618
        }
    }
}
